<?php

namespace Movies\MovieBundle\Entity\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * MovieRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class MovieRepository extends EntityRepository
{

	public function getMoviesQuery()
	{
		return $this->_em
                    ->createQueryBuilder('m')
                    ->select('m')
                    ->from('MoviesMovieBundle:Movie', 'm')
                    ->orderBy('m.id', 'desc')
                    ->getQuery();
	}

	public function getLastMovies($limit)
	{
		return $this->_em
				    ->createQueryBuilder('m')
				    ->select('m')
				    ->from('MoviesMovieBundle:Movie', 'm')
				    ->orderBy('m.id', 'desc')
				    ->setMaxResults($limit)
				    ->getQuery()
				    ->getResult();
	}

	public function getStats()
	{
		$nbMovies = $this->_em
				    ->createQueryBuilder('m')
				    ->select('count(m.id) as nbMovies')
				    ->from('MoviesMovieBundle:Movie', 'm')
				    ->getQuery()
				    ->getSingleResult();

		$nbMovies = current($nbMovies);		    


		$nbActors = $this->_em
				    ->createQueryBuilder('a')
				    ->select('count(a.id) as nbActors')
				    ->from('MoviesMovieBundle:Actor', 'a')
				    ->getQuery()
				    ->getSingleResult();

		$nbActors = current($nbActors);		    

		$nbComments = $this->_em
				    ->createQueryBuilder('c')
				    ->select('count(c.id) as nbComments')
				    ->from('MoviesMovieBundle:Comment', 'c')
				    ->getQuery()
				    ->getSingleResult();

		$nbComments = current($nbComments);

		$nbGenres = $this->_em
				    ->createQueryBuilder('g')
				    ->select('count(g.id) as nbGenres')
				    ->from('MoviesMovieBundle:Genre', 'g')
				    ->getQuery()
				    ->getSingleResult();

		$nbGenres = current($nbGenres);		    

		$nbMinutesMovies = $this->_em
				    ->createQueryBuilder('m')
				    ->select('sum(m.duration) as nbMinutesMovies')
				    ->from('MoviesMovieBundle:Movie', 'm')
				    ->getQuery()
				    ->getSingleResult();

		$nbMinutesMovies = current($nbMinutesMovies);

		return array('nbMovies' => $nbMovies, 
					 'nbActors' => $nbActors, 
					 'nbComments' => $nbComments,
					 'nbGenres' => $nbGenres,
					 'nbMinutesMovies' => $nbMinutesMovies);			    
	}
}
